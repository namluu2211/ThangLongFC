name: Build and Test ThangLong FC

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application 
      env:
        # Firebase configuration from GitHub secrets
        NG_APP_FIREBASE_API_KEY: ${{ secrets.APIKEY }}
        NG_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.AUTHDOMAIN }}
        NG_APP_FIREBASE_PROJECT_ID: ${{ secrets.PROJECTID }}
        NG_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.STORAGEBUCKET }}
        NG_APP_FIREBASE_DATABASE_URL: ${{ secrets.DATABASEURL }}
        NG_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.MESSAGINGSENDERID }}
        NG_APP_FIREBASE_APP_ID: ${{ secrets.APPID }}
        NG_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.MEASUREMENTID }}
      run: npm run build --if-present

    - name: Run tests (if available)
      env:
        NG_APP_FIREBASE_API_KEY: ${{ secrets.APIKEY }}
        NG_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.AUTHDOMAIN }}
        NG_APP_FIREBASE_PROJECT_ID: ${{ secrets.PROJECTID }}
        NG_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.STORAGEBUCKET }}
        NG_APP_FIREBASE_DATABASE_URL: ${{ secrets.DATABASEURL }}
        NG_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.MESSAGINGSENDERID }}
        NG_APP_FIREBASE_APP_ID: ${{ secrets.APPID }}
        NG_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.MEASUREMENTID }}
      run: npm run test --if-present || echo "No tests configured, skipping..."
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/
        retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      env:
        # Firebase configuration from GitHub secrets
        NG_APP_FIREBASE_API_KEY: ${{ secrets.APIKEY }}
        NG_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.AUTHDOMAIN }}
        NG_APP_FIREBASE_PROJECT_ID: ${{ secrets.PROJECTID }}
        NG_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.STORAGEBUCKET }}
        NG_APP_FIREBASE_DATABASE_URL: ${{ secrets.DATABASEURL }}
        NG_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.MESSAGINGSENDERID }}
        NG_APP_FIREBASE_APP_ID: ${{ secrets.APPID }}
        NG_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.MEASUREMENTID }}
      run: npm run build

    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MIA_FCM_D8555 }}
        projectId: mia-fcm-d8555
        channelId: live
        target: mia-fc-management